name: Create Release
on:
  push:
    branches:
      - main
      - master
jobs:
  semantic-release:
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.semantic.outputs.release-version }}
      new-release-published: ${{ steps.semantic.outputs.new-release-published }}
    steps:
      - uses: actions/checkout@v2
      - uses: codfish/semantic-release-action@v1
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  binary:
    runs-on: ubuntu-latest
    needs: semantic-release
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: v1.17.x
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            .bin
          key: cache-${{ hashFiles('**/go.sum') }}-${{ hashFiles('.bin/*') }}
          restore-keys: |
            cache-

      - run: make release
        env:
          VERSION: v${{ needs.semantic-release.outputs.release-version }}
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./.release/*
          tag: v${{ needs.semantic-release.outputs.release-version }}
          overwrite: true
          file_glob: true
  docker:
    needs: semantic-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: flanksource/canary-checker
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          snapshot: true
          tags: "latest,v${{ needs.semantic-release.outputs.release-version }}"
  docs:
    runs-on: ubuntu-latest
    needs: semantic-release
    container:
      image: flanksource/build-tools:v0.12.0
    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: "12"
      - run: make build-api-docs build-docs deploy-docs
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          MKDOCS_INSIDERS: ${{secrets.MKDOCS_INSIDERS}}
  trigger:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: send dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: flanksource/aws-sandbox
          event-type: canary-checker-release
  helm:
    runs-on: ubuntu-latest
    needs: semantic-release
    steps:
      - uses: actions/checkout@v2
      - name: Download yq
        run: |
          wget -nv -nc -O yq https://github.com/mikefarah/yq/releases/download/v4.20.2/yq_linux_amd64
          chmod +x yq
      - name: Update chart version
        run: ./yq -i e '.version = "${{ needs.semantic-release.outputs.release-version }}"' chart/Chart.yaml
      - name: Update app version
        run: ./yq -i e '.appVersion = "${{ needs.semantic-release.outputs.release-version }}"' chart/Chart.yaml
      - name: Update image tags
        run: ./yq -i e '.image.tag = "${{ needs.semantic-release.outputs.release-version }}"' chart/values.yaml
      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.8.0
      - name: Package Helm chart
        run: |
          make chart
      - name: Clone charts repo
        uses: actions/checkout@v3
        with:
          repository: "${{ github.repository_owner }}/charts"
          path: charts
          token: "${{ secrets.FLANKBOT }}"
      - name: Update chart repo
        run: |
          cd charts
          cp ../canary-checker-*.tgz ./
          helm repo index --merge index.yaml .
      - name: Push changes to chart repo
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Release ${{ needs.semantic-release.outputs.release-version }} of ${{ github.repository }}"
          branch: gh-pages
          repository: ./charts
